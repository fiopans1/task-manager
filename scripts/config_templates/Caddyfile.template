################################################################################
# Caddy Server Configuration for Task Manager Frontend
################################################################################
#
# This Caddyfile configures Caddy to serve the Task Manager React frontend
# as a Single Page Application (SPA) with appropriate security headers,
# caching, and compression.
#
# Default configuration serves on port 3000. Modify the address line to change
# the port or bind to a specific interface.
#
################################################################################

# Server address and port
:3000 {
    # Document root - serves static files from the frontend build directory
    root * ../lib/frontend
    
    ################################################################################
    # FILE SERVING & SPA ROUTING
    ################################################################################
    
    # Enable file server for static assets
    file_server
    
    # SPA fallback: redirect all non-existent file requests to index.html
    # This allows client-side routing (React Router) to work properly
    try_files {path} /index.html
    
    ################################################################################
    # COMPRESSION
    ################################################################################
    
    # Enable gzip compression for better performance
    # Automatically compresses responses for supported clients
    encode {
        gzip 6
        # Optionally add zstd for better compression (requires Caddy build with zstd)
        # zstd
    }
    
    ################################################################################
    # SECURITY HEADERS
    ################################################################################
    
    header {
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        
        # Prevent clickjacking attacks
        X-Frame-Options "SAMEORIGIN"
        
        # Enable XSS protection (legacy browsers)
        X-XSS-Protection "1; mode=block"
        
        # Referrer policy - controls information sent in Referer header
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Permissions policy - controls browser features
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        
        # Remove Server header for security through obscurity
        -Server
    }
    
    ################################################################################
    # CACHING STRATEGY
    ################################################################################
    
    # Cache static assets with versioned filenames aggressively
    @static {
        path *.js *.css *.woff *.woff2 *.ttf *.eot *.svg *.png *.jpg *.jpeg *.gif *.ico *.webp
    }
    header @static Cache-Control "public, max-age=31536000, immutable"
    
    # Cache index.html and manifest with shorter TTL (no cache)
    @html {
        path /index.html /manifest.json /robots.txt
    }
    header @html Cache-Control "public, max-age=0, must-revalidate"
    
    ################################################################################
    # LOGGING (Optional - Uncomment to enable)
    ################################################################################
    
    # Access log
    # log {
    #     output file ../logs/access.log {
    #         roll_size 100mb
    #         roll_keep 5
    #         roll_keep_for 720h
    #     }
    #     format json
    # }
    
    ################################################################################
    # REVERSE PROXY (Optional - Uncomment if proxying backend)
    ################################################################################
    
    # If you want to proxy API requests to backend through Caddy:
    # handle_path /api/* {
    #     reverse_proxy localhost:8080 {
    #         header_up Host {host}
    #         header_up X-Real-IP {remote}
    #         header_up X-Forwarded-For {remote}
    #         header_up X-Forwarded-Proto {scheme}
    #     }
    # }
}

################################################################################
# HTTPS CONFIGURATION (For production with domain)
################################################################################
#
# For production with a domain name, replace the :3000 block above with:
#
# yourdomain.com {
#     root * ../lib/frontend
#     file_server
#     try_files {path} /index.html
#     encode gzip
#     
#     # Headers (same as above)
#     header {
#         X-Content-Type-Options "nosniff"
#         X-Frame-Options "SAMEORIGIN"
#         X-XSS-Protection "1; mode=block"
#         Referrer-Policy "strict-origin-when-cross-origin"
#         Permissions-Policy "geolocation=(), microphone=(), camera=()"
#         -Server
#     }
#     
#     # Caching (same as above)
#     @static {
#         path *.js *.css *.woff *.woff2 *.ttf *.eot *.svg *.png *.jpg *.jpeg *.gif *.ico *.webp
#     }
#     header @static Cache-Control "public, max-age=31536000, immutable"
#     
#     @html {
#         path /index.html /manifest.json /robots.txt
#     }
#     header @html Cache-Control "public, max-age=0, must-revalidate"
#     
#     # Automatic HTTPS with Let's Encrypt
#     tls your-email@example.com
# }
