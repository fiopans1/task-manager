################################################################################
# Caddy Server Configuration for Task Manager Frontend
################################################################################
#
# This Caddyfile configures Caddy to serve the Task Manager React frontend
# as a Single Page Application (SPA) with appropriate security headers,
# caching, and compression.
#
# Default configuration serves on port 3000. Modify the address line to change
# the port or bind to a specific interface.
#
################################################################################

# Server address and port
:3000 {
    # Document root - serves static files from the frontend build directory
    root * ../lib/frontend
    
    ################################################################################
    # FILE SERVING & SPA ROUTING
    ################################################################################
    
    # Serve config.js from the conf directory
    handle /config.js {
        root * ../conf
        file_server
    }
    
    # Enable file server for static assets
    file_server
    
    # SPA fallback: redirect all non-existent file requests to index.html
    # This allows client-side routing (React Router) to work properly
    try_files {path} /index.html
    
    ################################################################################
    # COMPRESSION
    ################################################################################
    
    # Enable gzip compression for better performance
    # Automatically compresses responses for supported clients
    encode {
        gzip 6
    }
    
    ################################################################################
    # SECURITY HEADERS
    ################################################################################
    
    header {
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        
        # Prevent clickjacking attacks
        X-Frame-Options "SAMEORIGIN"
        
        # Enable XSS protection (legacy browsers)
        X-XSS-Protection "1; mode=block"
        
        # Referrer policy - controls information sent in Referer header
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Permissions policy - controls browser features
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        
        # Remove Server header for security through obscurity
        -Server
    }
    
    ################################################################################
    # CACHING STRATEGY
    ################################################################################
    
    # Cache static assets with versioned filenames aggressively
    @static {
        path *.css *.woff *.woff2 *.ttf *.eot *.svg *.png *.jpg *.jpeg *.gif *.ico *.webp
        not path /config.js
    }
    header @static Cache-Control "public, max-age=31536000, immutable"
    
    # Cache versioned JS files aggressively (except config.js)
    @versioned_js {
        path *.js
        not path /config.js
    }
    header @versioned_js Cache-Control "public, max-age=31536000, immutable"
    
    # Cache index.html, manifest, and config.js with shorter TTL (no cache)
    @no_cache {
        path /index.html /manifest.json /robots.txt /config.js
    }
    header @no_cache Cache-Control "public, max-age=0, must-revalidate"
}